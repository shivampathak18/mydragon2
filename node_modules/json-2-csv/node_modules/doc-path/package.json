{
  "author": {
    "name": "mrodrig"
  },
  "name": "doc-path",
  "description": "A document path library for Node.JS",
  "version": "1.0.2",
  "repository": {
    "type": "git",
    "url": "http://github.com/mrodrig/doc-path.git"
  },
  "main": "./lib/path.js",
  "scripts": {
    "test": "mocha test/tests.js",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- -R spec"
  },
  "keywords": [
    "document",
    "json",
    "json library",
    "document path",
    "doc-path",
    "doc path",
    "doc",
    "path",
    "json path",
    "path evaluator",
    "object",
    "object path"
  ],
  "dependencies": {},
  "devDependencies": {
    "mocha": "~2.2.4",
    "istanbul": "~0.3.13",
    "should": "~5.2.0",
    "underscore": "~1.8.3"
  },
  "engines": {
    "node": "*"
  },
  "license": "MIT",
  "readme": "# A Document Path Library for Node\n\n[![Build Status](https://travis-ci.org/mrodrig/doc-path.svg?branch=master)](https://travis-ci.org/mrodrig/doc-path)\n![David - Dependency Checker Icon](https://david-dm.org/mrodrig/doc-path.png \"doc-path Dependency Status\")\n[![Monthly Downloads](http://img.shields.io/npm/dm/doc-path.svg)](https://www.npmjs.org/package/doc-path)\n[![NPM version](https://img.shields.io/npm/v/doc-path.svg)](https://www.npmjs.org/package/doc-path)\n\nThis module will take paths in documents which can include nested paths specified by '.'s and can evaluate the path\nto a value, or can set the value at that path depending on the function called.\n\n## Installation\n\n```bash\n$ npm install doc-path\n```\n\n## Usage\n\n```javascript\nvar path = require('doc-path');\n```\n\n### API\n\n#### path.evaluatePath(document, key)\n\n* `document` - `Object` - A JSON document that will be iterated over.\n* `key` - `String` - A path to the existing key whose value will be returned.\n\nIf the key does not exist, `null` is returned.\n\n##### path.evaluatePath Example:\n\n```javascript\nvar path = require('doc-path');\n\nvar document = {\n    Make: 'Nissan',\n    Model: 'Murano',\n    Year: '2013',\n    Specifications: {\n        Mileage: '7106',\n        Trim: 'S AWD'\n    }\n};\n\nconsole.log(path.evaluatePath(document, 'Make'));\n// => 'Nissan'\n\nconsole.log(path.evaluatePath(document, 'Specifications.Mileage'));\n// => '7106'\n```\n\n#### path.setPath(document, key, value)\n\n* `document` - `Object` - A JSON document that will be iterated over.\n* `key` - `String` - A path to the existing key whose value will be set.\n* `value` - `*` - The value that will be set at the given key.\n\nIf the key does not exist, then the object will be built up to have that path.\nIf no document is provided, an error will be thrown.\n\n#### path.setPath Example:\n\n ```javascript\n var path = require('doc-path');\n\n var document = {\n     Make: 'Nissan'\n };\n\n console.log(path.setPath(document, 'Color.Interior', 'Tan'));\n // => { Make: 'Nissan', Color: { Interior: 'Tan' } }\n\n console.log(path.setPath(document, 'StockNumber', '34567'));\n // => { Make: 'Nissan', Color: { Interior: 'Tan' }, StockNumber: '34567' }\n ```\n\n## Tests\n\n```bash\n$ npm test\n```\n\n_Note_: This requires `mocha`, `should`, `async`, and `underscore`.\n\nTo see test coverage, please run:\n```bash\n$ npm run coverage\n```\n\nCurrent Coverage is:\n```\nStatements   : 100% ( 22/22 )\nBranches     : 90% ( 9/10 )\nFunctions    : 100% ( 2/2 )\nLines        : 100% ( 19/19 )\n```\n\n## Features\n\n- Supports nested paths\n- Same common path specification as other programs such as MongoDB",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mrodrig/doc-path/issues"
  },
  "homepage": "https://github.com/mrodrig/doc-path",
  "_id": "doc-path@1.0.2",
  "_shasum": "52e50f11fc0f9abdc48795311f0adb9b303e4263",
  "_from": "https://registry.npmjs.org/doc-path/-/doc-path-1.0.2.tgz",
  "_resolved": "https://registry.npmjs.org/doc-path/-/doc-path-1.0.2.tgz"
}
